name: release-please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-24.04
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      releases_created: ${{ steps.release.outputs.releases_created }}
      paths_released: ${{ steps.release.outputs.paths_released }}
      pr_created: ${{ steps.release.outputs.pr_created }}
      prs_created: ${{ steps.release.outputs.prs_created }}
    steps:
      - uses: actions/checkout@v5

      - name: Node.js LTS
        uses: actions/setup-node@v5
        with:
         node-version: 24.x

      - name: Run Release Please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

      - name: Update package-lock.json files after release-please PR creation
        if: steps.release.outputs.prs_created == 'true'
        run: |
          echo "üîÑ Updating package-lock.json files after release-please changes..."
          
          # Find all packages that have package.json files
          for package_dir in packages/*/; do
            if [ -f "${package_dir}package.json" ] && [ ! "${package_dir}" = "packages/documentation/" ]; then
              echo "üì¶ Updating package-lock.json for ${package_dir}"
              cd "${package_dir}"
              
              # Update package-lock.json to match the new version in package.json
              if [ -f "package-lock.json" ]; then
                npm install --package-lock-only
                echo "‚úÖ Updated package-lock.json in ${package_dir}"
              else
                echo "‚ö†Ô∏è No package-lock.json found in ${package_dir}"
              fi
              
              cd - > /dev/null
            fi
          done
          
          # Check if there are any changes to commit
          if ! git diff --quiet; then
            echo "üìù Committing updated package-lock.json files..."
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add packages/*/package-lock.json
            git commit -m "chore: update package-lock.json files after release-please"
            git push
          else
            echo "‚ÑπÔ∏è No package-lock.json changes to commit"
          fi

  publish-packages:
    runs-on: ubuntu-24.04
    needs: release-please
    if: needs.release-please.outputs.releases_created == 'true'
    strategy:
      matrix:
        package: [logger, fs, builder, server, project, cli]
    steps:
      - uses: actions/checkout@v5

      - name: Node.js LTS
        uses: actions/setup-node@v5
        with:
         node-version: 24.x

      - name: Check if package was released
        id: check_release
        run: |
          PACKAGE_PATH="packages/${{ matrix.package }}"
          
          # Check if this package was actually released by examining the release-please outputs
          if [[ "${{ needs.release-please.outputs.paths_released }}" == *"$PACKAGE_PATH"* ]]; then
            echo "üì¶ Package ${{ matrix.package }} was released"
            echo "released=true" >> $GITHUB_OUTPUT
            
            # Get the new version from package.json
            VERSION=$(grep '"version"' $PACKAGE_PATH/package.json | head -1 | cut -d'"' -f4)
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "‚ÑπÔ∏è Package ${{ matrix.package }} was not released in this run"
            echo "released=false" >> $GITHUB_OUTPUT
          fi

      - name: Verify package directory exists
        if: steps.check_release.outputs.released == 'true'
        run: |
          PACKAGE_PATH="packages/${{ matrix.package }}"
          if [ ! -d "$PACKAGE_PATH" ]; then
            echo "‚ùå Package directory $PACKAGE_PATH does not exist!"
            exit 1
          fi
          
          if [ ! -f "$PACKAGE_PATH/package.json" ]; then
            echo "‚ùå No package.json found in $PACKAGE_PATH!"
            exit 1
          fi
          
          echo "‚úÖ Package directory $PACKAGE_PATH exists and contains package.json"

      - name: Install dependencies
        if: steps.check_release.outputs.released == 'true'
        run: |
          cd "packages/${{ matrix.package }}"
          echo "üì¶ Installing dependencies for ${{ matrix.package }}@${{ steps.check_release.outputs.version }}"
          npm ci

      - name: Publish to NPM
        if: steps.check_release.outputs.released == 'true'
        run: |
          cd "packages/${{ matrix.package }}"
          echo "üöÄ Publishing ${{ matrix.package }}@${{ steps.check_release.outputs.version }} to NPM..."
          
          # TODO: Uncomment the following lines when ready to publish
          # npm publish --access public
          
          echo "‚úÖ Successfully published ${{ matrix.package }}@${{ steps.check_release.outputs.version }}"